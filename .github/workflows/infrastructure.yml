name: Infrastructure CI/CD

on:
  push:
    branches: [ master, infra-develop, develop ]
    paths:
      - 'infra/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [ master, infra-develop, develop ]
    paths:
      - 'infra/**'
      - '.github/workflows/infrastructure.yml'

env:
  RESOURCE_GROUP: microservice-app-dev-rg
  TERRAFORM_STATE_RG: terraform-state-rg
  TERRAFORM_STATE_STORAGE: tfstatemicroservicedev
  TERRAFORM_STATE_CONTAINER: terraform-state

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"

    - name: Terraform Init
      working-directory: ./infra
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ env.TERRAFORM_STATE_RG }}" \
          -backend-config="storage_account_name=${{ env.TERRAFORM_STATE_STORAGE }}" \
          -backend-config="container_name=${{ env.TERRAFORM_STATE_CONTAINER }}" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -backend-config="client_secret=${{ secrets.AZURE_CLIENT_SECRET }}"
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Terraform Format
      working-directory: ./infra
      run: terraform fmt -check

    - name: Terraform Validate
      working-directory: ./infra
      run: terraform validate

    - name: Terraform Plan (infra-develop)
      if: github.ref == 'refs/heads/infra-develop'
      working-directory: ./infra
      run: terraform plan -out=tfplan
      env:
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
        TF_VAR_environment: "dev"
        TF_VAR_project_name: "microservice-app"
        TF_VAR_location: "eastus"
        # Versiones de los servicios (usando latest por defecto)
        TF_VAR_frontend_version: "latest"
        TF_VAR_auth_api_version: "latest"
        TF_VAR_users_api_version: "latest"
        TF_VAR_todos_api_version: "latest"
        TF_VAR_log_processor_version: "latest"

    - name: Upload Terraform Plan
      if: github.ref == 'refs/heads/infra-develop'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: ./infra/tfplan

    - name: Terraform Plan & Validate (master)
      if: github.ref == 'refs/heads/master'
      working-directory: ./infra
      run: |
        terraform validate
        terraform plan -out=tfplan
      env:
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
        TF_VAR_environment: "dev"
        TF_VAR_project_name: "microservice-app"
        TF_VAR_location: "eastus"
        # Versiones de los servicios (usando latest por defecto)
        TF_VAR_frontend_version: "latest"
        TF_VAR_auth_api_version: "latest"
        TF_VAR_users_api_version: "latest"
        TF_VAR_todos_api_version: "latest"
        TF_VAR_log_processor_version: "latest"

    - name: Terraform Apply (master)
      if: github.ref == 'refs/heads/master'
      working-directory: ./infra
      run: terraform apply -auto-approve tfplan
      env:
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
        TF_VAR_environment: "dev"
        TF_VAR_project_name: "microservice-app"
        TF_VAR_location: "eastus"
        # Versiones de los servicios (usando latest por defecto)
        TF_VAR_frontend_version: "latest"
        TF_VAR_auth_api_version: "latest"
        TF_VAR_users_api_version: "latest"
        TF_VAR_todos_api_version: "latest"
        TF_VAR_log_processor_version: "latest"
